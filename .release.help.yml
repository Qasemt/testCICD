# .goreleaser.yml
project_name: app
builds:
  - id: dtm_amd64
    env: [CGO_ENABLED=0]
    goos:
      - linux
      - windows
    goarch:
      - amd64
    dir: .
    main: main.go
    ldflags:
      - -s -w -X main.Version=v{{.Version}}
      
  - id: linux-armhf-raspberry
    main: main.go
    binary: golang-cross
    goos:
      - linux
    goarch:
      - arm
    goarm:
      - 7
    env:
      - CC=arm-linux-gnueabihf-gcc
      - CXX=arm-linux-gnueabihf-g++
      - CGO_CFLAGS=--sysroot=/sysroot/linux/armhf
      - CGO_LDFLAGS=--sysroot=/sysroot/linux/armhf
      - PKG_CONFIG_SYSROOT_DIR=/sysroot/linux/armhf
      - PKG_CONFIG_PATH=/sysroot/linux/armhf/opt/vc/lib/pkgconfig:/sysroot/linux/armhf/usr/lib/arm-linux-gnueabihf/pkgconfig:/sysroot/linux/armhf/usr/lib/pkgconfig:/sysroot/linux/armhf/usr/local/lib/pkgconfig
    flags:
      - -mod=readonly
    ldflags:
      - -s -w -X main.version={{.Version}}
 archives:
  - id: golang-cross
    builds:
      - windows-amd64
      - linux-amd64
      - linux-armhf
    name_template: "{{ .ProjectName }}_{{ .Version }}_{{ .Os }}_{{ .Arch }}"
    format: zip
    wrap_in_directory: true
    
  #- id: dtm_arm64
  #  env: [CGO_ENABLED=0]
  #  goos:
  #    - darwin
  #  goarch:
  #    - arm64
  #  dir: .
  #  main: main.go
  #  ldflags:
  #    - -s -w -X main.Version=v{{.Version}}
